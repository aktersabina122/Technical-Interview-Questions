# https://leetcode.com/problems/plus-one

# Given a non-empty array of digits representing a non-negative integer, plus one to the integer.

# The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.

# You may assume the integer does not contain any leading zero, except the number 0 itself.

# Example 1:

# Input: [1,2,3]
# Output: [1,2,4]
# Explanation: The array represents the integer 123.
# Example 2:

# Input: [4,3,2,1]
# Output: [4,3,2,2]
# Explanation: The array represents the integer 4321.

class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        for i in range(len(digits)-1, -1, -1):
            if digits[i] < 9:
                digits[i] += 1
                return digits
            digits[i] = 0
        return [1] + digits
        
 # https://leetcode.com/problems/excel-sheet-column-number
 # Given a column title as appear in an Excel sheet, return its corresponding column number.

# For example:

    A -> 1
    B -> 2
    C -> 3
    ...
    Z -> 26
    AA -> 27
    AB -> 28 
    ...
# Example 1:

Input: "A"
Output: 1
Example 2:

Input: "AB"
Output: 28
Example 3:

Input: "ZY"
Output: 701

Solution:
public class Solution {
public int titleToNumber(String s) {
    int sum = 0;
    for(int k = 0; k < s.length(); k++) {
        sum *= 26;
        sum += (s.charAt(k) - 'A' + 1);
    }
    return sum;
}
}

# https://leetcode.com/problems/power-of-two
# Given an integer, write a function to determine if it is a power of two.

# Example 1:

Input: 1
Output: true 
Explanation: 20 = 1
Example 2:

Input: 16
Output: true
Explanation: 24 = 16
Example 3:

Input: 218
Output: false

# class Solution:
    def isPowerOfTwo(self, n):
        return (n>0) and (n & (n-1)) == 0

