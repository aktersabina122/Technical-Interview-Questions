
# https://leetcode.com/problems/two-sum/
# Given an array of integers, return indices of the two numbers such that they add up to a specific target.
#
# You may assume that each input would have exactly one solution, and you may not use the same element twice.
#
# Example:
#
# n = [2, 7, 11, 15]
# t = 9


#
# Because nums[0] + nums[1] = 2 + 7 = 9,
# return [0, 1]


class Solution:
    def twoSum(self, nums, target):
        """
        type nums: List[int]
        type target: int
        return type: List[int]
         
        """
        #initialize dictionaries
        dic = {}
        
        for i, num in enumerate(nums):
            remaining = target - num
            
            if remaining in dic:
                return [dic[remaining], i]
            else:
                dic[num] = i
                
        return []
        
 # https://leetcode.com/problems/valid-anagram/
 # Given two strings s and t , write a function to determine if t is an anagram of s.
#
# Example 1:
#
# s = "anagram"
# t = "nagaram"


# Output: true
# Example 2:
#
# s = "aa"
# t = "a"


# Output: false

class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        if sorted(list(t)) == sorted(list(s)): # checking if both list are equal
            return True
        else:
            return False
